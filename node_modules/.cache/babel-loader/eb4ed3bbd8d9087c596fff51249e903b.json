{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\vgarg9\\\\Desktop\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\vgarg9\\\\Desktop\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\vgarg9\\\\Desktop\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\vgarg9\\\\Desktop\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\vgarg9\\\\Desktop\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\vgarg9\\\\Desktop\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\src\\\\components\\\\todo\\\\ToDosComponent.jsx\";\nimport React, { Component } from \"react\";\nimport ToDoService from \"../../api/todo/ToDoDataService.js\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\nvar ToDosComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ToDosComponent, _Component);\n\n  var _super = _createSuper(ToDosComponent);\n\n  function ToDosComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ToDosComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      todos: [],\n      message: null\n    };\n    _this.deleteToDo = _this.deleteToDo.bind(_assertThisInitialized(_this));\n    _this.refreshToDo = _this.refreshToDo.bind(_assertThisInitialized(_this));\n    _this.updateToDo = _this.updateToDo.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ToDosComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshToDo();\n    }\n  }, {\n    key: \"refreshToDo\",\n    value: function refreshToDo() {\n      var _this2 = this;\n\n      var username = AuthenticationService.getUserLoggedIn();\n      ToDoService.retrieveAllToDos(username).then(function (response) {\n        _this2.setState({\n          todos: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, \"List ToDos\"), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 40\n        }\n      }, this.state.message), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }, \"Is completed?\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }\n      }, \"Target Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, this.state.todos.map(function (todo) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: todo.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }\n        }, todo.description), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 37\n          }\n        }, todo.completed.toString()), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }\n        }, todo.targetDate.toString()), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this3.updateToDo(todo.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }\n        }, \"Update\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this3.deleteToDo(todo.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }\n        }, \"Delete\")));\n      })))));\n    }\n  }, {\n    key: \"deleteToDo\",\n    value: function deleteToDo(id) {\n      var _this4 = this;\n\n      var username = AuthenticationService.getUserLoggedIn();\n      console.log(username, id);\n      ToDoService.deleteToDo(username, id).then(function (response) {\n        _this4.setState({\n          message: \"Delete of ToDo with id \".concat(id, \" successful\")\n        });\n\n        _this4.refreshToDo();\n      });\n    }\n  }, {\n    key: \"updateToDo\",\n    value: function updateToDo(id) {\n      console.log(id);\n    }\n  }]);\n\n  return ToDosComponent;\n}(Component);\n\nexport default ToDosComponent;","map":{"version":3,"sources":["C:/Users/vgarg9/Desktop/full-stack-with-react-and-spring-boot/frontend/src/components/todo/ToDosComponent.jsx"],"names":["React","Component","ToDoService","AuthenticationService","ToDosComponent","props","state","todos","message","deleteToDo","bind","refreshToDo","updateToDo","username","getUserLoggedIn","retrieveAllToDos","then","response","setState","data","map","todo","id","description","completed","toString","targetDate","console","log"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport ToDoService from \"../../api/todo/ToDoDataService.js\";\r\nimport AuthenticationService from \"./AuthenticationService.js\"\r\n\r\nclass ToDosComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n            this.state = {\r\n                todos : [],\r\n                message : null\r\n            }\r\n            this.deleteToDo = this.deleteToDo.bind(this);\r\n            this.refreshToDo = this.refreshToDo.bind(this);\r\n            this.updateToDo = this.updateToDo.bind(this);\r\n        }\r\n        componentDidMount(){          \r\n            this.refreshToDo();\r\n        }\r\n\r\n        refreshToDo(){\r\n            const username = AuthenticationService.getUserLoggedIn();\r\n            ToDoService.retrieveAllToDos(username)\r\n            .then(\r\n                response => {\r\n                this.setState({todos : response.data})\r\n            })\r\n        }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>List ToDos</h1>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Is completed?</th>\r\n                            <th>Target Date</th>\r\n                            <th>Update</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.todos.map( \r\n                                todo => \r\n                                <tr key={todo.id}>\r\n                                    <td>{todo.description}</td>\r\n                                    <td>{todo.completed.toString()}</td>\r\n                                    <td>{todo.targetDate.toString()}</td>\r\n                                    <td><button className=\"btn btn-success\" onClick={() => this.updateToDo(todo.id)}>Update</button></td>\r\n                                    <td><button className=\"btn btn-warning\" onClick={() => this.deleteToDo(todo.id)}>Delete</button></td> \r\n                                </tr>\r\n                            )\r\n                            }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    deleteToDo(id){\r\n        const username = AuthenticationService.getUserLoggedIn();\r\n        console.log(username,id)\r\n        ToDoService.deleteToDo(username,id)\r\n        .then(\r\n            response => {\r\n                this.setState({message: `Delete of ToDo with id ${id} successful`})\r\n                this.refreshToDo();\r\n            }\r\n        )\r\n    }\r\n    updateToDo(id){\r\n        console.log(id);\r\n    }\r\n}\r\n\r\nexport default ToDosComponent;"]},"metadata":{},"sourceType":"module"}